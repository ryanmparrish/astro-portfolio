---
interface Props {
	href: string;
}

const { href } = Astro.props;
---

<a href={href} target="_blank">
  <div class="face"><slot/></div>
  <div class="mask"><slot/></div>
</a>

<style>
	a {
		position: relative;
		display: flex;
		place-content: center;
		text-align: center;
		padding: 0.5em .75em;
		gap: 0.8em;
		color: var(--accent-text-over);
		text-decoration: none;
		line-height: 1.1;
		/* border-radius: 999rem; */
		overflow: hidden;
		background: var(--gradient-accent-orange);
		/* box-shadow: var(--shadow-md); */
		white-space: nowrap;
	}

  .face {
    position: relative;
    z-index: 1;
    transition: transform var(--theme-transition);
  }

  .mask {
    position: absolute;
    inset: 100% 0 0;
    background: var(--gradient-accent-orange);
    mix-blend-mode: overlay;
    transition: background-color var(--theme-transition), top var(--theme-transition);
    display: flex;
    place-content: center;
    text-align: center;
    padding: 0.5em .75em;
    gap: 0.8em;
    line-height: 1.1;
  }

	a:hover {
		.face {
      transform: translateY(-150%);
    }
    .mask {
      top: 0;
    }
	}

	a:focus {
    .mask {
      mix-blend-mode: normal;
      text-shadow: 0 0 0.5em var(--accent-text-shadow);
    }
	}

	@media (min-width: 20em) {
		a {
			font-size: var(--text-lg);
		}
	}

	/* Overlay for hover effects. */
	a::after {
		content: '';
		position: absolute;
		inset: 0;
		pointer-events: none;
		transition: background-color var(--theme-transition);
		mix-blend-mode: overlay;
		background-color: var(--gradient-accent);
	}

	a:focus::after,
	a:hover::after {
		background-color: hsla(var(--gray-999-basis), 0.3);
	}

	@media (min-width: 50em) {
		a {
			/* padding: 1.125rem 2.5rem; */
			font-size: var(--text-xl);
		}
	}
</style>
