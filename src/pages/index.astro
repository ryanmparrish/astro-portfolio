---
import { getCollection } from 'astro:content';
import { fade } from "astro:transitions";

// Layout import â€” provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from '../layouts/BaseLayout.astro';

// Component Imports
import CallToAction from '../components/CallToAction.astro';
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import Icon from '../components/Icon.astro';
import Pill from '../components/Pill.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';

// Page section components
import ContactCTA from '../components/ContactCTA.astro';
import Skills from '../components/Skills.astro';
import IntroSlider from '../components/IntroSlider.astro';
import Mentions from '../components/Mentions.astro';

// Content Fetching: List four most recent work projects
const projects = (await getCollection('work'))
	.filter((project) => !project.data.draft && project.data.featured) // Filter out drafts and non-featured projects
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
	.slice(0, 4);

const introSlides = {
	slide_list: [
		{
			src: '/assets/carousel/portrait.jpg',
		},
		{
			src: '/assets/carousel/portrait-bw.jpg',
		},
		{
			src: '/assets/carousel/at-work.jpg',
		},
	],
};

const roles: { icon: 'code' | 'feather' | 'heartbeat' | 'yin-yang', label: string }[] = [
	{ icon: 'code', label: 'Developer' },
	{ icon: 'feather', label: 'Designer' },
	{ icon: 'heartbeat', label: 'Dad' },
	{ icon: 'yin-yang', label: 'Athlete' },
];

// Full Astro Component Syntax:
// https://docs.astro.build/basics/astro-components/
---

<BaseLayout
	title="Ryan Parrish | Product Designer & Developer"
	description="Ryan Parrish is a product designer and developer based in Salt Lake City, Utah."
>
	<div class="stack gap-20 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<header class="hero" transition:animate={fade({ duration: ".3s" })}>
				<Hero
					title="Ryan M Parrish"
					tagline="Creative Developer based in Salt Lake City, UT"
					align="start"
				>
					<div class="roles">
						{roles.map(({ icon, label }, index) => (
							<Pill {index}>
								<Icon icon={icon} size="1.33em" />
								{label}
							</Pill>
						))}
					</div>
				</Hero>
				<IntroSlider introSlides={introSlides} />
			</header>

			<Skills />
		</div>

		<main class="wrapper stack gap-20 lg:gap-48">
			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Selected Work</h3>
					<p>Take a look below at some of my featured work for clients from the past few years.</p>
				</header>

				<div class="cta">
					<CallToAction href="/work/">
						View All
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
				</div>

				<div class="gallery">
					<Grid variant="offset">
						{
							projects.map((project, index) => (
								<li class="fade-in-item" style={`--delay: ${index * 0.2}s`}>
									<PortfolioPreview project={project} />
								</li>
							))
						}
					</Grid>
				</div>
			</section>
		</main>

		<ContactCTA />
	</div>
</BaseLayout>

<style>
	:root {
		--bg-image-main: url('/assets/backgrounds/bg-main-light-800w.jpg');
	}

	:root.theme-dark {
		--bg-image-main: url('/assets/backgrounds/bg-main-dark-800w.jpg');
	}

	.fade-in-item {
		opacity: 0;
		transform: translateY(20px);
		transition: opacity 0.6s ease-out, transform 0.6s ease-out;
		transition-delay: var(--delay, 0s);
	}

	.fade-in-item.visible {
		opacity: 1;
		transform: translateY(0);
	}

	@media (min-width: 50em) {
		:root {
			--bg-image-main: url('/assets/backgrounds/bg-main-light-1440w.jpg');
		}
		:root.theme-dark {
			--bg-image-main: url('/assets/backgrounds/bg-main-dark-1440w.jpg');
		}
	}

	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: flex;
		flex-wrap: wrap;
		gap: 1rem;
	}

	.hero img {
		aspect-ratio: 5 / 4;
		object-fit: cover;
		object-position: top;
		border-radius: 1rem;
		box-shadow: var(--shadow-md);
	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

		.hero img {
			aspect-ratio: 3 / 4;
			border-radius: 1rem;
			object-fit: cover;
		}
	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}

	.instagram-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		gap: 1rem;
		width: 100%;
	}

	.instagram-item {
		aspect-ratio: 1;
		overflow: hidden;
		border-radius: 0.5rem;
		transition: transform 0.3s ease;
		background: var(--gray-900);
	}

	.instagram-item:hover {
		transform: scale(1.05);
	}

	.instagram-embed {
		width: 100%;
		height: 100%;
		border: none;
	}

	@media (min-width: 50em) {
		.instagram-grid {
			grid-template-columns: repeat(3, 1fr);
			gap: 2rem;
		}
	}
</style>

<script>
	document.addEventListener('astro:page-load', () => {
		const observer = new IntersectionObserver(
			(entries) => {
				entries.forEach((entry) => {
					if (entry.isIntersecting) {
						entry.target.classList.add('visible');
						// Once the animation is triggered, we can stop observing
						observer.unobserve(entry.target);
					}
				});
			},
			{
				// Start animation when the element is 20% from the bottom of the viewport
				rootMargin: '0px 0px -20% 0px',
				threshold: 0.1
			}
		);

		// Observe all fade-in items
		document.querySelectorAll('.fade-in-item').forEach((item) => {
			observer.observe(item);
		});
	});
</script>
